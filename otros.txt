
- Para el primer caso entrenaria con qtables solo con los sensores sin los frames para que fuese más simple, a ver que es capaz de hacer.



Lo siguiente es darle recompensa positiva por metros y tiempo y darle una recomepensa bastante negativa por chocar.


Pruebo entrenarlo con los siguientes parametros, estoy en el commit Se añaden mas estados y ajustes en la recompensa

        #|||||||||||||||||| Parametros para el entrenamiento |||||||||||||||||


        # Training parameters
        n_training_episodes = 3005  # Total training episodes
        learning_rate = 0.1         # Learning rate

        # Evaluation parameters
        n_eval_episodes = 100        # Total number of test episodes

        # Environment parameters
        max_steps = 200              # Max steps per episode
        gamma = 0.10                 # Discounting rate 
        eval_seed = []               # The evaluation seed of the environment

        # Exploration parameters
        max_epsilon = 1.0             # Exploration probability at start
        min_epsilon = 0.05            # Minimum exploration probability
        decay_rate = 0.0015           # Exponential decay rate for exploration prob





        para ver la tensor board

        tensorboard --logdir logs 



  falta stackear 3 frames y que funcione tensor

  o alomejor usar el lidar y stackearlo en 3 para que tenga 3 dimensiones